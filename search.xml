<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>蓝桥杯学习-将字符串转化为段码</title>
      <link href="/2023/03/21/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%AD%A6%E4%B9%A0-%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%AE%B5%E7%A0%81/"/>
      <url>/2023/03/21/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%AD%A6%E4%B9%A0-%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%AE%B5%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="100" src="https://music.163.com/outchain/player?type=2&id=1343014887&auto=1&height=100"></iframe></iframe><p>紧接着第一篇点亮数码管的文章，虽然我们已经可以点亮数码管了，但是每一次都要我们手动去取段码的话非常麻烦，而且容易出错，而且程序里面有需要显示，且不断变化的值又该如何去实现呢，不过我们是幸运的，只需要一点简单的算法就可以实现字符串到段码的自动转换，而且我们可以通过 <strong>sprintf</strong> 函数与一个简单的 <strong>处理函数</strong> 就可以轻松的实现数码管的更新。</p><hr><h3 id="首先让我们来看一下段码数据长啥样："><a href="#首先让我们来看一下段码数据长啥样：" class="headerlink" title="首先让我们来看一下段码数据长啥样："></a>首先让我们来看一下段码数据长啥样：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code t_display[]=&#123;                       <span class="comment">//标准字库</span></span><br><span class="line"><span class="comment">//   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F</span></span><br><span class="line">    <span class="number">0x3F</span>,<span class="number">0x06</span>,<span class="number">0x5B</span>,<span class="number">0x4F</span>,<span class="number">0x66</span>,<span class="number">0x6D</span>,<span class="number">0x7D</span>,<span class="number">0x07</span>,<span class="number">0x7F</span>,<span class="number">0x6F</span>,<span class="number">0x77</span>,<span class="number">0x7C</span>,<span class="number">0x39</span>,<span class="number">0x5E</span>,<span class="number">0x79</span>,<span class="number">0x71</span>,</span><br><span class="line"><span class="comment">//  black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y</span></span><br><span class="line">    <span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x76</span>,<span class="number">0x1E</span>,<span class="number">0x70</span>,<span class="number">0x38</span>,<span class="number">0x37</span>,<span class="number">0x5C</span>,<span class="number">0x73</span>,<span class="number">0x3E</span>,<span class="number">0x78</span>,<span class="number">0x3d</span>,<span class="number">0x67</span>,<span class="number">0x50</span>,<span class="number">0x37</span>,<span class="number">0x6e</span>,</span><br><span class="line"><span class="comment">//   0.   1.   2.  3.    4.   5.   6.   7.   8.   9.   -1</span></span><br><span class="line">    <span class="number">0xBF</span>,<span class="number">0x86</span>,<span class="number">0xDB</span>,<span class="number">0xCF</span>,<span class="number">0xE6</span>,<span class="number">0xED</span>,<span class="number">0xFD</span>,<span class="number">0x87</span>,<span class="number">0xFF</span>,<span class="number">0xEF</span>,<span class="number">0x46</span>&#125;;    </span><br></pre></td></tr></table></figure><p>此处为从STC-ISP程序的实列代码中取得的数码管段码数据，我们可以看到字符与对应段码数据的对应关系，而我们需要注意，开发板上的数码管是共阳接法，即对应位为0时点亮，所以我们在写入段码数据的时候需要对数据进行取反处理，在上一篇文章中我们已经处理过了，所以我们可以直接调用这里的段码数据。</p><h3 id="来让我们看一下处理函数"><a href="#来让我们看一下处理函数" class="headerlink" title="来让我们看一下处理函数"></a>来让我们看一下处理函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Str_Process</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">8</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">switch</span>(SEG_Str[j])&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x3F</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x06</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x5B</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x4F</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x66</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x6D</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x7D</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x07</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x7F</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x6F</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x77</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x7C</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x39</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x5E</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x79</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;F&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x71</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27; &#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x00</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x40</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                SEG_Buff[i] = <span class="number">0x5C</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(SEG_Str[j+<span class="number">1</span>]==<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">            SEG_Buff[i]=SEG_Buff[i]|<span class="number">0x80</span>;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实就是一串switch-case语句，根据每一位字符串的对应值，将相应段码数据赋值给SEG_Buff,对于需要显示小数点的情况，我们只需要判断j+1位置上的字符是否为 <strong>‘.’</strong> 即可，同时在处理完成后需要让j加上1，跳过这个小数点。</p><hr><p>然后我们再将这个函数放到中断当中循环调用即可，这里我设置的调用周期是50ms，当然也可以根据需求进行增减。</p><h3 id="完整中断处理函数"><a href="#完整中断处理函数" class="headerlink" title="完整中断处理函数"></a>完整中断处理函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Timer_Handle</span> <span class="params">()</span> interrupt 1&#123;</span><br><span class="line"></span><br><span class="line">    Sys_Tick ++;</span><br><span class="line">    <span class="keyword">if</span> (Sys_Tick &gt; <span class="number">1000</span>)&#123;</span><br><span class="line">        Sys_Tick = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    HC138_Write(<span class="number">0xFF</span>,SEG_DAT);        <span class="comment">//消影，避免数码管产生“鬼影”现象</span></span><br><span class="line">    HC138_Write(<span class="number">0x01</span>&lt;&lt;SEG_Pos,SEG_COM);</span><br><span class="line">    HC138_Write(~SEG_Buff[SEG_Pos],SEG_DAT);</span><br><span class="line">    SEG_Pos++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(SEG_Pos&gt;=<span class="number">8</span>)&#123;</span><br><span class="line">        SEG_Pos = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>((Sys_Tick % <span class="number">50</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">        Str_Process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试主函数"><a href="#测试主函数" class="headerlink" title="测试主函数"></a>测试主函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">    HW_Init();</span><br><span class="line">    TIMER_Init();</span><br><span class="line">    INT_Init();</span><br><span class="line">    LED_Buff = <span class="number">0x01</span>;</span><br><span class="line">    delay_ms(<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)&#123;</span><br><span class="line">            HC138_Write(~LED_Buff,LED);</span><br><span class="line">            LED_Buff = LED_Buff &lt;&lt; <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">sprintf</span>(SEG_Str,<span class="string">&quot;%8d&quot;</span>,Sys_Tick);</span><br><span class="line">            delay_ms(<span class="number">50</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)&#123;</span><br><span class="line">            HC138_Write(~LED_Buff,LED);</span><br><span class="line">            LED_Buff = LED_Buff &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">sprintf</span>(SEG_Str,<span class="string">&quot;%8d&quot;</span>,Sys_Tick);</span><br><span class="line">            delay_ms(<span class="number">50</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src="/2023/03/21/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%AD%A6%E4%B9%A0-%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%AE%B5%E7%A0%81/%E6%95%88%E6%9E%9C%E5%9B%BE.gif" alt="效果图"></p>]]></content>
      
      
      <categories>
          
          <category> C51学习日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯学习-点亮数码管</title>
      <link href="/2023/03/19/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%AD%A6%E4%B9%A0-%E7%82%B9%E4%BA%AE%E6%95%B0%E7%A0%81%E7%AE%A1/"/>
      <url>/2023/03/19/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%AD%A6%E4%B9%A0-%E7%82%B9%E4%BA%AE%E6%95%B0%E7%A0%81%E7%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>这是第一份关于蓝桥杯的学习日志，四月份就是正式比赛了，也借着这个机会好好地锻炼一下吧。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="100" src="https://music.163.com/outchain/player?type=2&id=1814370970&auto=1&height=100"></iframe></iframe><hr><p>万事开头难嘛，针对与这个数码管的驱动程序，我们肯定要先根据单片机的IO分配来决定驱动的形式，此时我们就需要赛点包中所提供的原理图来进行针对性的处理了。<br>首先让我们打开资源包中的V3版本原理图，找到数码管驱动电路部分：<br><img src="/2023/03/19/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%AD%A6%E4%B9%A0-%E7%82%B9%E4%BA%AE%E6%95%B0%E7%A0%81%E7%AE%A1/%E6%95%B0%E7%A0%81%E7%AE%A1%E5%8E%9F%E7%90%86%E5%9B%BE.jpg" alt="数码管部分原理图"></p><p>通过查阅原理图可得知，数码管的段选与位选分别由74HC138的Y7与Y6控制，如下表所示：</p><table><thead><tr><th align="center">功能</th><th align="center">对应引脚电平</th></tr></thead><tbody><tr><td align="center">位选</td><td align="center">A0&#x3D;0,A1&#x3D;1,A2&#x3D;1</td></tr><tr><td align="center">段选</td><td align="center">A0&#x3D;1,A1&#x3D;1,A2&#x3D;1</td></tr></tbody></table><p>由于多个外设同时使用P0总线进行数据交换，所以我们需要操作74HC138进行外设选择，从而实现对P0端口的分时复用。</p><h4 id="注意：此处有一个小坑"><a href="#注意：此处有一个小坑" class="headerlink" title="注意：此处有一个小坑"></a>注意：此处有一个小坑</h4><p>如果使用对P2口引脚的位操作进行切换，有一定几率会对非目标外设造成干扰，这里我们先将A2端口置低，将74HC138的译码结果切换至Y0-Y3，然后再操作A1与A2端口到目标外设端口，放置数据，然后将A2口置高，完成外设使能操作，最后将A2，A1，A0口逐个值低，放置外设意外使能。</p><h3 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HC138_Switch</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> OUT)</span>&#123;</span><br><span class="line">    HC138_A2 = <span class="number">0</span>;                    <span class="comment">//将138译码器切换至Y0-Y3</span></span><br><span class="line">    _nop_();</span><br><span class="line">    <span class="keyword">switch</span> (OUT)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> LED:                    <span class="comment">//使能LED</span></span><br><span class="line">            HC138_A0 = <span class="number">0</span>;</span><br><span class="line">            HC138_A1 = <span class="number">0</span>;</span><br><span class="line">            _nop_();</span><br><span class="line">            HC138_A2 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ULN:                    <span class="comment">//使能ULN2003</span></span><br><span class="line">            HC138_A0 = <span class="number">1</span>;</span><br><span class="line">            HC138_A1 = <span class="number">0</span>;</span><br><span class="line">            _nop_();</span><br><span class="line">            HC138_A2 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> SEG_COM:                <span class="comment">//使能数码管位选</span></span><br><span class="line">            HC138_A0 = <span class="number">0</span>;</span><br><span class="line">            HC138_A1 = <span class="number">1</span>;</span><br><span class="line">            _nop_();</span><br><span class="line">            HC138_A2 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> SEG_DAT:                <span class="comment">//使能数码管段选</span></span><br><span class="line">            HC138_A0 = <span class="number">1</span>;</span><br><span class="line">            HC138_A1 = <span class="number">1</span>;</span><br><span class="line">            _nop_();</span><br><span class="line">            HC138_A2 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138_Write</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> DAT,<span class="type">unsigned</span> <span class="type">char</span> OUT)</span>&#123;</span><br><span class="line">    EA = <span class="number">0</span>;                        <span class="comment">//防止操作被打断</span></span><br><span class="line">    P0 = DAT;                      <span class="comment">//防止数据到总线上</span></span><br><span class="line">    HC138_Switch(OUT);             <span class="comment">//使能相应外设，外设将数据从总线上取出</span></span><br><span class="line">    HC138_A2 = <span class="number">0</span>;</span><br><span class="line">    HC138_A1 = <span class="number">0</span>;</span><br><span class="line">    HC138_A0 = <span class="number">0</span>;                  <span class="comment">//将138译码器切换至Y0，防止外设意外使能</span></span><br><span class="line">    EA = <span class="number">1</span>;                        <span class="comment">//重新启动中断</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关于数码管的刷新"><a href="#关于数码管的刷新" class="headerlink" title="关于数码管的刷新"></a>关于数码管的刷新</h3><p>因为板上的数码管使用动态扫描接法，所以需要不停扫描才能正常地显示所有的位，所以我们可以使用一个定时器来完成这一项工作，同时这个定时器也可以作为系统的节拍器来使用，相当于ARM系列单片机的Systick。</p><p>在这里我们采用定时器0：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TIMER_Init</span><span class="params">()</span>&#123;  <span class="comment">//我们通过STC-ISP计算出11.0592Mhz下1ms的定时器初值</span></span><br><span class="line">    AUXR |= <span class="number">0x80</span>;   <span class="comment">//定时器时钟1T模式</span></span><br><span class="line">    TMOD &amp;= <span class="number">0xF0</span>;    <span class="comment">//设置定时器模式</span></span><br><span class="line">    TL0 = <span class="number">0xCD</span>;        <span class="comment">//设置定时初值</span></span><br><span class="line">    TH0 = <span class="number">0xD4</span>;        <span class="comment">//设置定时初值</span></span><br><span class="line">    TF0 = <span class="number">0</span>;        <span class="comment">//清除TF0标志</span></span><br><span class="line">    TR0 = <span class="number">0</span>;        <span class="comment">//定时器0开始计时</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">INT_Init</span><span class="params">()</span>&#123;    <span class="comment">//初始化系统中断</span></span><br><span class="line">    ET0 = <span class="number">1</span>;        <span class="comment">//允许定时器0中断</span></span><br><span class="line">    EA = <span class="number">1</span>;         <span class="comment">//打开总中断</span></span><br><span class="line">    TR0 = <span class="number">1</span>;        <span class="comment">//定时器0启动定时</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除此之外，我们还需要建立一个中断处理函数来作为中断任务使用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Timer_Handle</span> <span class="params">()</span> interrupt 1&#123;</span><br><span class="line"></span><br><span class="line">    Sys_Tick ++;</span><br><span class="line">    <span class="keyword">if</span> (Sys_Tick &gt; <span class="number">1000</span>)&#123;</span><br><span class="line">        Sys_Tick = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    HC138_Write(<span class="number">0x01</span>&lt;&lt;SEG_Pos,SEG_COM);</span><br><span class="line">    HC138_Write(~SEG_Buff[SEG_Pos],SEG_DAT);</span><br><span class="line">    SEG_Pos++;</span><br><span class="line">    <span class="keyword">if</span>(SEG_Pos&gt;=<span class="number">8</span>)&#123;</span><br><span class="line">        SEG_Pos = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的interrupt 1表示这个函数对应单片机的中断向量1，也就是定时器0的中断处理函数，当定时器0产生中断后单片机就会执行这段函数。</p><p>我们在这个函数中执行了两个任务，首先是Sys_Tick的自增，Sys_Tick是一个全局变量，通过读取Sys_Tick变量的当前值，我们可以知道我们的单片机运行了多长时间，在一些需要监测时间的场合可以很方便地实现，比如按键双击与长按。</p><p>第二个任务则是数码管的刷新，在这里我们没有一次性刷新完所有的段码，而是一次只刷新一位段码，这样做是因为每一次刷新的时间都极断，如果不使用这种刷新方式的话，可能会导致数码管闪烁，而且一次刷新完所有段码需要消耗的时钟周期偏长，会导致处理中断的时间过长，从而影响该中断处理函数中的其他任务。</p><h3 id="现在加上主程序"><a href="#现在加上主程序" class="headerlink" title="现在加上主程序"></a>现在加上主程序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    HW_Init();</span><br><span class="line">    TIMER_Init();</span><br><span class="line">    INT_Init();</span><br><span class="line">    LED_Buff = <span class="number">0x01</span>;</span><br><span class="line">    delay_ms(<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)&#123;</span><br><span class="line">            HC138_Write(~LED_Buff,LED);</span><br><span class="line">            LED_Buff = LED_Buff &lt;&lt; <span class="number">1</span>;</span><br><span class="line">            delay_ms(<span class="number">50</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)&#123;</span><br><span class="line">            HC138_Write(~LED_Buff,LED);</span><br><span class="line">            LED_Buff = LED_Buff &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            delay_ms(<span class="number">50</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个程序的作用就是操作LED，实现一个左右流动的流水灯效果，由于我们的数码管在终端当中进行刷新，所以我们只需要改变SEG_Buff中的段码数据即可改变显示的内容。</p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="/2023/03/19/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%AD%A6%E4%B9%A0-%E7%82%B9%E4%BA%AE%E6%95%B0%E7%A0%81%E7%AE%A1/%E6%95%88%E6%9E%9C%E5%9B%BE.gif" alt="效果图"></p>]]></content>
      
      
      <categories>
          
          <category> C51学习日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/15/hello-world/"/>
      <url>/2022/02/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hello World </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
